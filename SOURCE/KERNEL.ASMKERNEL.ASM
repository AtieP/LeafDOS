BITS 16

BUFFER EQU 24576

JC KERNEL_LOOP	 ;IF CARRY FLAG IS SET, GO TO THE KERNEL LOOP DIRECTLY
JMP START_KERNEL ;JUMP TO START KERNEL DIRECTLY
				 ;PUT DATA IN THE START BECAUSE I SAID SO
NOP

;0008-002C AREA FOR USE WITH LEAF OS PROGRAMS
IO:
	CALL PRINT_TEXT					;0008H
	CALL PRINT_CHAR					;000BH
	CALL WAIT_FOR_KEYPRESS			;000EH
	CALL CHECK_KEYPRESS				;0011H
	CALL KEYBOARD_INPUT				;0014H
	CALL COPY_MEMORY				;0017H
	CALL COPY_CHAR_TO_MEMORY		;001AH
	CALL REBOOT						;001DH
	CALL DECIMAL_INTEGER_TO_STRING	;0020H
	CALL FILENAME_TO_FAT12			;0023H

	CALL RESET_FLOPPY				;0026H
	CALL LOGICAL_TO_HTS				;0029H	
	CALL LOAD_PROGRAM				;002CH
	
	CALL GOTOXY						;002FH
	CALL CLEAR_SCREEN				;0032H

;DATA GOES HERE
STRING:
	;OS INFORMATION
	.OS_NAME 				DB 'LDOS',0
	.OS_VERSION 			DB '0.1RC',0
	;ERRORS
	.ERROR_FLOPPY_DISK		DB 'FLOPPY DISK ERROR',0
	.ERROR_UNKNOWN_COMMAND	DB 'UNRECOGNIZED COMMAND',0
	;MISC
	.NEWLINE				DB 13,10,0
FLOPPY:
	.DEVICE_NUMBER			DB 0
	.SECTORS_PER_TRACK 		DW 18
	.SIDES 					DW 2
	.ROOT_DIRECTORY_ENTRIES DW 224
	.CLUSTER				DW 0
	.POINTER				DW 0
DATA:
	.KEYBOARD_BUFFER		TIMES 15 DB 0 	;KEYBOARD BUFFER
	.PROGRAM_TO_LOAD		TIMES 15 DB 0 	;REQUESTED PROGRAM TRANSFORMED INTO
											;A SIMPLE FAT12 FRIENDLY STRING
MEMORY:
	.PROGRAM_LOAD			DW 32768

START_KERNEL:
	CLI ;FLUSH INTERRUPTS
	MOV AX, 0
	MOV SS, AX
	MOV SP, 0FFFFH ;0FFF = 65,535
	STI ;RESTORE INTERRUPTS
	CLD ;GO UP IN THE RAM
	MOV AX, 8192 	;AFTER THIS WE SHOULDNT
	MOV DS, AX		;BOTHER ABOUT SEGMENTS ANYMORE
	MOV ES, AX		;WELL, NOT YET
	MOV FS, AX
	MOV GS, AX
	MOV [FLOPPY.DEVICE_NUMBER], DL ;SAVE DEVICE NUMBER
INIT:
	MOV SI, STRING.OS_NAME ;PRINT OS NAME AND VERSION
	CALL PRINT_TEXT
	PUSHA
	MOV AL, ' ' ;SPACE BETWEN VERSION AND NAME
	CALL PRINT_CHAR
	POPA
	MOV SI, STRING.OS_VERSION ;VERSION
	CALL PRINT_TEXT
	MOV SI, STRING.NEWLINE
	CALL PRINT_TEXT
KERNEL_LOOP:
	MOV SI, STRING.NEWLINE ;SOME PROGRAMS MAY ARBITRARILY ENTER THE KERNEL
	CALL PRINT_TEXT
	PUSHA ;PRINT DRIVE LETTER
	MOV AL, 'A' ;(A+DEV_NUM) = A OR B
	ADD AL, BYTE [FLOPPY.DEVICE_NUMBER]
	CALL PRINT_CHAR
	MOV AL, ':' ;MS-DOS STYLE TWO-DOT CHARACTER AFTER
				;DRIVE LETTER
	CALL PRINT_CHAR
	MOV AL, '\' ;SLASH
	CALL PRINT_CHAR
	
	;TODO: CHECK IN WICH FOLDER WE ARE
	
	MOV AL, '>' ;FINALY THE EPIC ARROW SIGN
	CALL PRINT_CHAR
	POPA

	MOV CH, 12 ;LIMIT IS 32 CHARACTERS
	MOV DI, DATA.KEYBOARD_BUFFER ;KEYBOARD BUFFER IS KEYBOARD BUFFER
	CALL KEYBOARD_INPUT ;GET KEYBOARD INPUT
	
	PUSHA
	MOV SI, DATA.KEYBOARD_BUFFER ;BLANK LINES ARE IGNORED
	LODSB
	CMP AL, 31 ;ANYTHING BELOW SPACE CHAR IS BLANK LINE
	JLE KERNEL_LOOP
	POPA
	
	;MOV SI, STRING.NEWLINE
	;CALL PRINT_TEXT
	
	;CONVERT BUFFER TO A READABLE THING
	MOV SI, DATA.KEYBOARD_BUFFER
	MOV DI, DATA.PROGRAM_TO_LOAD
	CALL FILENAME_TO_FAT12
	;MOV SI, DATA.PROGRAM_TO_LOAD
	;CALL PRINT_TEXT
	
	MOV SI, STRING.NEWLINE
	CALL PRINT_TEXT

	CALL LOAD_PROGRAM ;LOAD PROGRAM INTO MEMORY
	JC .LOAD

	JMP KERNEL_LOOP

.LOAD:
	XOR AX, AX ;CLEAR REGISTERS
	XOR BX, BX
	XOR CX, CX
	XOR DX, DX
	XOR SI, SI
	XOR DI, DI
	
	JMP 32768:0000
	
	JMP KERNEL_LOOP

%INCLUDE "SOURCE\IO.ASM"
%INCLUDE "SOURCE\FAT12.ASM"
