;=======================================================================
;
;KERNEL.ASM
;
;DO I NEED TO EXPLAIN WHAT IS THIS?
;
;IS THE KERNEL, IT IS PART OF IO.ASM (TECHNICALY).
;
;THE ONLY FUNCTION THAT THE KERNEL DOES IS PROVIDING A NICE SHELL TO
;EXECUTE PROGRAMS.
;
;=======================================================================

BITS 16
ORG 0

FILE_DATA:
		.FILENAME                               DB 'KERNEL' ;FILE NAME, 6 CHARACTERS
		.EXTENSION                              DB 'SYS'        ;EXTENSION, 3 CHARATCERS
		
%DEFINE __KERNELSYS__

%IFNDEF __KERNELSYS__
		%WARNING KERNEL.SYS IS NOT DEFINED
%ENDIF
		
%MACRO DEBUG 1+
	SECTION .DATA
%%STRING:
	DB %1,__NEWLINE__,0
SECTION .TEXT
	PUSH SI
	MOV SI, %%STRING
	CALL __IO_DISPLAY_PRINT_TEXT
	POP SI
%ENDMACRO
		
%INCLUDE "..\IO.INC"
%INCLUDE "..\SPECS.INC"
		
CALL_REFERENCES:
		JMP __IO_START                                                                  ;000AH
		
%INCLUDE "IO.ASM"

GLOBAL __IO_DEVICE_PS2_ERROR
GLOBAL __IO_DEVICE_PS2_INITIALIZE
GLOBAL __IO_DEVICE_PS2_READ_BYTE_CONTROLLER
GLOBAL __IO_DEVICE_PS2_READ_BYTE_DEVICE
GLOBAL __IO_DEVICE_PS2_SEND_BYTE_TO_CONTROLLER
GLOBAL __IO_DEVICE_PS2_SEND_BYTE_TO_FIRST_DEVICE
GLOBAL __IO_DEVICE_PS2_SEND_BYTE_TO_SECOND_DEVICE

GLOBAL __IO_DISK_ERROR
GLOBAL __IO_DISK_LOAD_FILE
GLOBAL __IO_DISK_LOGICAL_SECTOR_TO_HTS
GLOBAL __IO_DISK_RESET
GLOBAL __IO_DISPLAY_CLEAR_TEXT_SCREEN
GLOBAL __IO_DISPLAY_ENABLE_TEXT_MODE_CURSOR
GLOBAL __IO_DISPLAY_DISABLE_TEXT_MODE_CURSOR
GLOBAL __IO_DISPLAY_PRINT_CHAR
GLOBAL __IO_DISPLAY_PRINT_TEXT
GLOBAL __IO_DISPLAY_SCROLL_DOWN
GLOBAL __IO_DISPLAY_UPDATE_TEXT_MODE_CURSOR
GLOBAL __IO_KEYBOARD_INPUT
GLOBAL __IO_KEYBOARD_KEYPRESS
GLOBAL __IO_SERIAL_ENABLE
GLOBAL __IO_SERIAL_GET_BYTE
GLOBAL __IO_SERIAL_PORTS_CHECK
GLOBAL __IO_SERIAL_SEND_BYTE
GLOBAL __IO_SERIAL_SEND_BYTES
GLOBAL __IO_MEMORY_COPY
GLOBAL __IO_MEMORY_COPY_BYTE
GLOBAL __IO_MEMORY_DESTROY_TABLE
GLOBAL __IO_MEMORY_MANAGE
GLOBAL __IO_STRING_CHECK_CHARACTER_IN_LOCATION
GLOBAL __IO_STRING_COMPARE
GLOBAL __IO_STRING_COPY
GLOBAL __IO_STRING_HAS_CHARACTER
GLOBAL __IO_STRING_IS_EMPTY
GLOBAL __IO_STRING_LENGHT
GLOBAL __IO_STRING_REPLACE_CHARACTER
GLOBAL __IO_STRING_REVERSE
GLOBAL __IO_STRING_TOKENIZE
GLOBAL __IO_STRING_TO_AFPFS_FILENAME
GLOBAL __IO_SYSTEM_REBOOT
GLOBAL __IO_SYSTEM_TIMER
		
__IO_START:
	CLI ;FLUSH INTERRUPTS
	XOR AX, AX ;SET STACK
	MOV SS, AX ;POINT AT STACK ELEMENT 0
	MOV SP, 0FFFFH ;STACK IS PLACED AT THE END OF OUR SEGMENT'S ADDRESS
	STI ;RESTORE INTERRUPTS
	CLD ;GO UP IN THE RAM
	MOV AX, __KERNEL__ ;AFTER THIS WE SHOULDNT
	MOV DS, AX ;BOTHER ABOUT SEGMENTS ANYMORE
	MOV ES, AX ;WELL, NOT YET
	MOV FS, AX
	MOV GS, AX
	TEST DL, DL
	JMP .__SUBFUNC_OLD
	MOV [__DATA_DRIVE_NUMBER], DL ;SAVE DEVICE NUMBER
	PUSH ES
	MOV AH, 8
	INT 13H
	POP ES
	AND CX, 3FH
	MOV [__DATA_SECTORS_PER_TRACK], CX
	MOVZX DX, DH
	ADD DX, 1
	MOV [__DATA_SIDES], DX
.__SUBFUNC_OLD:
	XOR EAX, EAX
;KERNEL INIT
;THIS LABEL INDICATES WHEN THE
;NAME AND THE VERSION OF LEAFDOS ARE SHOWN
__IO_KERNEL_POST_START:
	;BOCHS LEAVES STUFF ON SCREEN
	;SO WE MUST CLEAN IT TO MAKE BOCHS
	;HAPPY >:(
	MOV AH, 01BH
	MOV AL, ' '
	CALL __IO_DISPLAY_CLEAR_TEXT_SCREEN
	
	MOV SI, __TEXT_DOS_NAME ;PRINT OS NAME AND VERSION
	CALL __IO_DISPLAY_PRINT_TEXT
	PUSHA
	MOV AL, ' ' ;SPACE BETWEN VERSION AND NAME
	CALL __IO_DISPLAY_PRINT_CHAR
	POPA
	MOV SI, __TEXT_DOS_VERSION ;VERSION
	CALL __IO_DISPLAY_PRINT_TEXT
	
	PUSH AX
	MOV AL, __NEWLINE__
	CALL __IO_DISPLAY_PRINT_CHAR
	POP AX
		
	;DISPLAY THAT IO EXISTS
	MOV SI, __TEXT_IO_NAME
	CALL __IO_DISPLAY_PRINT_TEXT
	MOV AL, ' '
	CALL __IO_DISPLAY_PRINT_CHAR
	MOV SI, __TEXT_IO_VERSION
	CALL __IO_DISPLAY_PRINT_TEXT
	
	PUSH AX
	MOV AL, __NEWLINE__
	CALL __IO_DISPLAY_PRINT_CHAR
	POP AX
	
	;INITIALIZE PS/2 DEVICES
	;CALL __IO_DEVICE_PS2_INITIALIZE_DEVICES
	CALL __IO_DEVICE_PS2_INITIALIZE
	
__IO_KERNEL_MAIN:
	PUSH AX
	MOV AL, __NEWLINE__
	CALL __IO_DISPLAY_PRINT_CHAR
	POP AX

	;DUMP SOME STUFF TO THE SERIAL
	PUSH AX
	PUSH CX
	PUSH ES
	PUSH SI
	PUSH DX
	MOV SI, 0
	MOV CX, 5000
	MOV DX, __IO_ADDRESS_COM1
	CALL __IO_SERIAL_SEND_BYTES
	POP DX
	POP SI
	POP ES
	POP CX
	POP AX
	
	PUSH AX
	PUSH SI
	
	MOV AH, 07H
	MOV AL, 'A' ;(A+DEV_NUM) = A OR B
	ADD AL, BYTE [__DATA_DRIVE_NUMBER]
	CALL __IO_DISPLAY_PRINT_CHAR
	MOV SI, __TEXT_DRIVE_LETTER
	CALL __IO_DISPLAY_PRINT_TEXT
	
	POP SI
	POP AX

	PUSH BX
	MOV BL, [__DATA_TEXT_X]
	MOV BH, [__DATA_TEXT_Y]
	CALL __IO_DISPLAY_UPDATE_TEXT_MODE_CURSOR
	POP BX

	PUSH_ALL
	MOV CH, 10 ;LIMIT IS 9 CHARACTERS
	MOV DI, __DATA_KEYBOARD_BUFFER ;KEYBOARD BUFFER IS KEYBOARD BUFFER
	CALL __IO_KEYBOARD_INPUT ;GET KEYBOARD INPUT
	MOV SI, __DATA_KEYBOARD_BUFFER ;BLANK LINES ARE IGNORED
	LODSB
	CMP AL, 31 ;ANYTHING BELOW SPACE CHAR IS BLANK LINE
	JLE __IO_KERNEL_MAIN
	POP_ALL
		
	PUSH SI
	PUSH AX
	MOV AL, __NEWLINE__
	CALL __IO_DISPLAY_PRINT_CHAR
	POP AX
	MOV SI, __DATA_KEYBOARD_BUFFER
	MOV CX, 9
	MOV DX, __IO_ADDRESS_COM1
	CALL __IO_SERIAL_SEND_BYTES
	POP SI
		
	PUSH_INDEXES
	MOV SI, __DATA_KEYBOARD_BUFFER ;CONVERT KEYBOARD BUFFER INTO
	MOV DI, __DATA_PROGRAM_TO_LOAD ;A USEFUL FILENAME
	CALL __IO_STRING_TO_AFPFS_FILENAME
	POP_INDEXES
		
	;IS IT THE KERNEL?
	;PUSH_INDEXES ;KERNEL DOSENT EXISTS.
	;MOV SI, __DATA_PROGRAM_TO_LOAD ;JUST KIDDING
	;MOV DI, __TEXT_KERNEL_FILENAME ;IT DOES
	;CALL __IO_STRING_COMPARE ;BUT THE USER IS TRICKED
	;JC .__SUBFUNC_NOT_FOUND
	;POP_INDEXES

	MOV SI, __DATA_PROGRAM_TO_LOAD ;LOAD OUR PROGRAM
	MOV AX, __PROGRAM__
	CALL __IO_DISK_LOAD_FILE
	JNC .__SUBFUNC_LOAD_BINARY
	JMP .__SUBFUNC_NOT_FOUND
.__SUBFUNC_LOAD_BINARY:
	MOV AX, __PROGRAM__     ;MAKE SEGMENTS POINT TO THE PROGRAM
	MOV ES, AX              ;EXTENDED SEGMENT...
	MOV DS, AX              ;DATA SEGMENT
	MOV GS, AX              ;ETC...
	MOV FS, AX
		
	XOR AX, AX      ; <- RETURN VALUE FOR PROGRAMS
	XOR BX, BX
	XOR CX, CX
	XOR DX, DX
	XOR SI, SI
	XOR DI, DI
		
	CALL __PROGRAM__:__AFPFS_DEFAULT__
		
	MOV AX, __KERNEL__      ;ALL LEAF DOS PROGRAMS RESETS SEGMENTS
	MOV ES, AX                      ;OR MODIFIES THEM IN A WAY THAT THE KERNEL
	MOV DS, AX                      ;COULD CRASH, SO WE HAVE TO RESTORE
	MOV GS, AX                      ;SEGMENTS FOR OUR KERNEL
	MOV FS, AX
	JMP __IO_KERNEL_MAIN
		
.__SUBFUNC_NOT_FOUND:
	MOV AL, '<'
	CALL __IO_DISPLAY_PRINT_CHAR
	MOV SI, __DATA_PROGRAM_TO_LOAD
	CALL __IO_DISPLAY_PRINT_TEXT
	MOV AL, '>'
	CALL __IO_DISPLAY_PRINT_CHAR
	MOV AL, 20H
	CALL __IO_DISPLAY_PRINT_CHAR
	MOV SI, __TEXT_ERROR_UNKNOWN_COMMAND
	CALL __IO_DISPLAY_PRINT_TEXT
	JMP __IO_KERNEL_MAIN
	
SECTION .TEXT
	;KERNEL GENERAL MESSAGES
	__TEXT_KERNEL_FILENAME									DB 'KERNELSYS',0 ;PREVENT USER FROM LOADING KERNEL
	__TEXT_DOS_NAME											DB 'LDOS',0 ;DOS NAME
	__TEXT_DOS_VERSION										DB '0.1.6',0 ;DOS VERSION
	__TEXT_ERROR_UNKNOWN_COMMAND							DB 'IS NOT A COMMAND OR FILE',0
	__TEXT_IO_VERSION										DB '0.1.6',0 ;IO VERSION
	__TEXT_IO_NAME											DB 'IO LIB',0 ;IO NAME
	__TEXT_DRIVE_LETTER										DB ':\>',0
	;DISK DRIVER ERROR MESSAGES
	__TEXT_DISK_ERROR_INVALID_COMMAND						DB 'INVALID COMMAND',__NEWLINE__,0							;01
	__TEXT_DISK_ERROR_ADDRESS_MARK_NOT_FOUND				DB 'ADDRESS MARK NOT FOUND',__NEWLINE__,0					;02
	__TEXT_DISK_ERROR_WRITE_PROTECTED						DB 'DISK IS WRITE PROTECTED',__NEWLINE__,0					;03
	__TEXT_DISK_ERROR_SECTOR_NOT_FOUND						DB 'SECTOR NOT FOUND',__NEWLINE__,0							;04
	__TEXT_DISK_ERROR_RESET_FAILED							DB 'DISK RESET FAILED',__NEWLINE__,0						;05
	__TEXT_DISK_ERROR_FLOPPY_DISK_REMOVED					DB 'FLOPPY WAS REMOVED',__NEWLINE__,0						;06
	__TEXT_DISK_ERROR_BAD_PARAMETER_TABLE					DB 'BAD DISK PARAMETER TABLE',__NEWLINE__,0					;07
	__TEXT_DISK_ERROR_DMA_OVERRUN							DB 'DMA OVERRUN',__NEWLINE__,0								;08
	__TEXT_DISK_ERROR_DMA_CROSSED_64K						DB 'DMA CROSSED 64KB BOUNDARY',__NEWLINE__,0				;09
	__TEXT_DISK_ERROR_BAD_SECTOR_FLAG						DB 'BAD SECTOR FLAG SET',__NEWLINE__,0						;0A
	__TEXT_DISK_ERROR_BAD_TRACK_FLAG						DB 'BAD TRACK FLAG SET',__NEWLINE__,0						;0B
	__TEXT_DISK_ERROR_MEDIA_TYPE_NOT_FOUND					DB 'MEDIA NOT FOUND',__NEWLINE__,0							;0C
	__TEXT_DISK_ERROR_INVALID_NUMBER_OF_SECTORS				DB 'INVALID NUMBER OF SECTORS',__NEWLINE__,0				;0D
	__TEXT_DISK_ERROR_CONTROL_DATA_ADDRESS_MARK				DB 'CONTROL ADDRESS MARK DETECTED',__NEWLINE__,0			;0E
	__TEXT_DISK_ERROR_DMA_ARBITRATION_LEVEL_OUT_OF_RANGE	DB 'DMA ARBITRATION LEVEL OUT OF RANGE',__NEWLINE__,0		;0F
	__TEXT_DISK_ERROR_UNCORRECTABLE_CRC_ECC_DATA_ERROR		DB 'UNCORRECTABLE CRC/ECC DATA ERROR',__NEWLINE__,0			;10
	__TEXT_DISK_ERROR_ECC_CORRECTED_DATA_ERROR				DB 'ECC CORRECTED DATA ERROR',__NEWLINE__,0					;11
	__TEXT_DISK_ERROR_CONTROLLER_FAILED						DB 'CONTROLLER FAILED',__NEWLINE__,0						;20
	__TEXT_DISK_ERROR_SEEK_FAILED							DB 'SEEK FAILURE',__NEWLINE__,0								;40
	__TEXT_DISK_ERROR_DISK_TIME_OUT							DB 'DISK TIMEOUT',__NEWLINE__,0								;80
	__TEXT_DISK_ERROR_DRIVE_NOT_READY						DB 'DRIVE NOT READY',__NEWLINE__,0							;AA
	__TEXT_DISK_ERROR_UNDEFINED_ERROR						DB 'UNDEFINED ERROR',__NEWLINE__,0							;BB
	__TEXT_DISK_ERROR_WRITE_FAULT							DB 'WRITE FAULT',__NEWLINE__,0								;CC
	__TEXT_DISK_ERROR_STATUS_REGISTER_ERROR					DB 'STATUS_REGISTER ERROR',__NEWLINE__,0					;E0
	__TEXT_DISK_ERROR_SENSE_OPERATION_FAILED				DB 'SENSE OPERATION FAILED',__NEWLINE__,0					;FF
	__TEXT_DISK_ERROR_UNKNOWN								DB 'UNKNOWN DISK ERROR',__NEWLINE__,0						;??
	;PS/2 DRIVER MESSAGES
	__TEXT_ERROR_PS2_TIMEOUT								DB 'PS/2 DEVICE TIMEOUT',__NEWLINE__,0
	__TEXT_ERROR_PS2_BAD_ACK								DB 'PS/2 DEVICE SENT BAD ACK BYTE',__NEWLINE__,0
	__TEXT_ERROR_PS2_SELF_TEST								DB 'PS/2 CONTROLLER SELF TEST FAILED',__NEWLINE__,0
	__TEXT_ERROR_PS2_PORT_ONE_FAILED_TEST					DB 'PS/2 FIRST PORT FAILED TESTS',__NEWLINE__,0
	__TEXT_ERROR_PS2_PORT_TWO_FAILED_TEST					DB 'PS/2 SECOND PORT FAILED TESTS',__NEWLINE__,0
	__TEXT_ERROR_PS2_BAD_CONTROLLER_REPLY					DB 'PS/2 CONTROLLER RETURNED BAD REPLY',__NEWLINE__,0
	;PS/2 DEVICE TYPE
	__TEXT_PS2_DEVICE_STANDARD_PS2_MOUSE					DB 'STANDARD PS/2 MOUSE',__NEWLINE__,0
	__TEXT_PS2_DEVICE_MOUSE_WITH_SCROLL						DB 'PS/2 MOUSE WITH SCROLL WHELL',0
	__TEXT_PS2_DEVICE_5_BUTTON_MOUSE						DB '5-BUTTON PS/2 MOUSE',__NEWLINE__,0
	__TEXT_PS2_DEVICE_MF2_KEYBOARD							DB 'MF2 PS/2 KEYBOARD',__NEWLINE__,0
	__TEXT_PS2_DEVICE_MF2_KEYBOARD_TRANS					DB 'MF2 PS/2 KEYBOARD WITH TRANSLATION SUPPORT',__NEWLINE__,0
	__TEXT_PS2_DEVICE_AT_KEYBOARD							DB 'IBM AT PS/2 KEYBOARD',__NEWLINE__,0
	__TEXT_PS2_DEVICE_UNKNOWN								DB 'UNKOWN PS/2 DEVICE',__NEWLINE__,0
	
SECTION .DATA
	__DATA_SECTORS_PER_TRACK								DW 18
	__DATA_SIDES											DW 2
	__DATA_TEXT_MODE_WIDE									DB 80
	__DATA_TEXT_MODE_TALL									DB 25                   
	__DATA_TEXT_MEMORY										DW 0B800H
	__DATA_GRAPHICS_MEMORY									DW 0A000H
	;PS/2 DRIVER DATA
	__DATA_PORTS											DB 0
	__DATA_PS2_DRIVER_ERROR_CODE							DB 0
	
SECTION .BSS
	__DATA_TICKS_PER_SECOND									DW 0
	__DATA_REQUESTED_TIMER									DW 0
	__DATA_KEYBOARD_BUFFER									TIMES 11 DB 0   ;KEYBOARD BUFFER
	__DATA_PROGRAM_TO_LOAD									TIMES 11 DB 0   ;REQUESTED PROGRAM TRANSFORMED INTO
	__DATA_TEXT_Y											DB 0
	__DATA_TEXT_X											DB 0
	__DATA_DRIVE_NUMBER										DB 0

SECTION .RODATA
	__AFPFS_EOF												DW 0FF8H
