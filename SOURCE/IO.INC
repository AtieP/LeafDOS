BUFFER 								EQU 24576 ;BUFFER TO STORE STUFF
_PROGRAM_							EQU 2000H ;LOAD PROGRAMS AT 16K
_KERNEL_MODULE_						EQU 0700H ;LOAD KERNEL MOODULES LOWER THAN PROGRAMS
_KERNEL_							EQU 0500H ;SOME FREE MEMORY
_MEMORY_TABLE_						EQU 0600H ;PLACE NEAR KERNEL

;SERIAL PORTS
COM1_ADDRESS						EQU 03F8H
COM2_ADDRESS						EQU 02F8H
COM3_ADDRESS						EQU 03E8H
COM4_ADDRESS						EQU 02E8H

PS2_DATA_PORT						EQU 0060H
PS2_STATUS_REGISTER					EQU	0064H
PS2_COMMAND_REGISTER				EQU	0064H

;MEMORY_ALLOCATION FLAGS
MEMORY_SEGMENT_FREE					EQU 0AAH
MEMORY_SEGMENT_NOT_FREE				EQU 0EEH
MEMORY_SEGMENT_NEVER_FREE			EQU 0EFH
MEMORY_SEGMENT_KERNEL_MODULE		EQU 0FFH

%MACRO PUSH_SEGMENTS 0
PUSH DS ;DATA SEGMENT
PUSH ES ;EXTENDED SEGMENT
PUSH FS ;? SEGMENT
PUSH GS ;? SEGMENT
%ENDMACRO

%MACRO POP_SEGMENTS 0
POP GS ;SAME AS PUSH_SEGMENTS, BUT IN REVERSE!
POP FS
POP ES
POP DS
%ENDMACRO

%MACRO PUSH_INDEXES 0
PUSH SI ;SOURCE INDEX
PUSH DI ;DESTINATION INDEX
%ENDMACRO

%MACRO POP_INDEXES 0
POP DI
POP SI
%ENDMACRO

%MACRO PUSH_REGISTERS 0
PUSH DX
PUSH CX
PUSH BX
PUSH AX
%ENDMACRO

%MACRO POP_REGISTERS 0
POP AX
POP BX
POP CX
POP DX
%ENDMACRO

%MACRO PUSH_ALL 0
PUSH_REGISTERS
PUSH_INDEXES
PUSH_SEGMENTS
%ENDMACRO

%MACRO POP_ALL 0
POP_SEGMENTS
POP_INDEXES
POP_REGISTERS
%ENDMACRO
