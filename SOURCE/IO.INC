;=======================================================================
;
;IO.INC
;
;INCLUDE FILE THAT INCLUDES MACROS, OFFSETS, PORTS, SEGMENTS, ETC.
;IO.ASM CANNOT WORK WITHOUT IO.INC.
;
;=======================================================================

;SEGMENTS
__PROGRAM__							EQU 2000H ;WHERE PROGRAMS ARE LOADED
__KERNEL_MODULE__					EQU 0700H ;PROGRAMS THAT RESIDE IN MEMORY, AND CAN BE CALLED
__KERNEL__							EQU 0500H ;KERNEL LOAD MEMORY
__MEMORY_TABLE__					EQU 0600H ;TABLE THAT MANAGES ALL ALLOCATIONS AND FREE'S
__BUFFER__							EQU 3000H ;BUFFER FOR EVERYTHING

;OFFSETS
__AFPFS_DEFAULT__					EQU 0009H ;DEFAULT LOCATION FOR OFFSETS IN AFPFS

;SPECIAL CHARACTERS
__NEWLINE__							EQU 0DH

;SERIAL PORTS
__IO_ADDRESS_COM1					EQU 03F8H
__IO_ADDRESS_COM2					EQU 02F8H
__IO_ADDRESS_COM3					EQU 03E8H
__IO_ADDRESS_COM4					EQU 02E8H

__IO_ADDRESS_PS2_DATA_PORT			EQU 0060H
__IO_ADDRESS_PS2_STATUS_REGISTER	EQU	0064H
__IO_ADDRESS_PS2_COMMAND_REGISTER	EQU	0064H

__IO_COLOR_DEFAULT					EQU 007H

;MEMORY_ALLOCATION FLAGS
MEMORY_FLAG_SEGMENT_FREE			EQU 0AAH
MEMORY_FLAG_SEGMENT_NOT_FREE		EQU 0EEH
MEMORY_FLAG_SEGMENT_NEVER_FREE		EQU 0EFH
MEMORY_FLAG_SEGMENT_KERNEL_MODULE	EQU 0FFH

%MACRO PUSH_SEGMENTS 0
PUSH DS ;DATA SEGMENT
PUSH ES ;EXTENDED SEGMENT
PUSH FS ;? SEGMENT
PUSH GS ;? SEGMENT
%ENDMACRO

%MACRO POP_SEGMENTS 0
POP GS ;SAME AS PUSH_SEGMENTS, BUT IN REVERSE!
POP FS
POP ES
POP DS
%ENDMACRO

%MACRO PUSH_INDEXES 0
PUSH SI ;SOURCE INDEX
PUSH DI ;DESTINATION INDEX
%ENDMACRO

%MACRO POP_INDEXES 0
POP DI
POP SI
%ENDMACRO

%MACRO PUSH_REGISTERS 0
PUSH DX
PUSH CX
PUSH BX
PUSH AX
%ENDMACRO

%MACRO POP_REGISTERS 0
POP AX
POP BX
POP CX
POP DX
%ENDMACRO

%MACRO PUSH_ALL 0
PUSH_REGISTERS
PUSH_INDEXES
PUSH_SEGMENTS
%ENDMACRO

%MACRO POP_ALL 0
POP_SEGMENTS
POP_INDEXES
POP_REGISTERS
%ENDMACRO
